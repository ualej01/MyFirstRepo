<!DOCTYPE html>
<html>
    <!-- 
        TO DO (temporary notes)
        - function status message generator/ color code
            - function progress bar
        - function place new content in specified row
        - function add/remove mifi 
        - CLEAN CODE. var names, css condensing
    -->

<head>
    <!-- FOR LOCAL COMPATABILITY -->
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />

    <!-- REFRESH PAGE EVERY 60 MINUTES -->
    <!-- <meta http-equiv="refresh" content="3600"/> -->

    <title>Mifi Manager</title>

    <HTA:APPLICATION 
        APPLICATIONNAME="Mifi Manager" 
            ID="hta_utility" border="none" 
            borderStyle="none" caption="yes"
            contextMenu="no" 
            maximizeButton="yes" 
            minimizeButton="yes" 
            navigable="no" 
            showInTaskbar="yes"
            singleInstance="yes" 
            scroll="no" 
            sysmenu="yes" 
            VERSION="1.0" 
            WINDOWSTATE="maximize"></HTA:APPLICATION>

    <!-- VISUAL STYLE | Colors | Dimensions -->
    <style type="text/css">
        /**************** General Styling ****************/
        body,
        html {
            font-family: "Century Gothic", CenturyGothic, sans-serif;
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }
        /**************** Table Styling ****************/
        .rowStyle {
            width: 100%;
            margin-bottom: 1px;
        }
        .rowStyle:before,
        .rowStyle:after {
            content: "";
            display: table;
            clear: both;
        }
        .cHeadStyle {
            background-color: rgb(21, 112, 148);
            color: white;
            padding: 10px 10px 10px 10px;
        }
        .cIDStyle {
            background-color: rgb(245, 245, 245);
            padding: 10px 10px 10px 10px;
        }
        .cDataStyle {
            background-color: rgb(245, 245, 245);
            padding: 10px 10px 10px 10px;
        }
        .cbtnStyle {
            height: 39px;
            text-align: center;
        }

        /**************** Button Style ****************/
        .btn-1 {
            width: 100%;
            background-color: rgb(175, 175, 175);
            border: none;
            color: white;
            padding: 11px 0 11px 0;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 14px;
            cursor: pointer;
            border-radius: 4px;
        }
        .btn-1:hover {
            background-color: rgb(125, 125, 125);
        }

        /**************** Grid Dimensions ****************/
        .col-1 {
            box-sizing: border-box;
            float: left;
            width: calc((100%/6) - 1.01px);
            margin: 0 1px 0 0;
        }

        /**************** PDF Framing ****************/
        /* PDF frame size */
        #pdfframe {
            width: 100%;
            height: 93vh;
        }
        /* PDF Popup (background) */
        .modal {
            display: none;/* Hidden by default */
            position: fixed;/* Stay in place */
            z-index: 1;/* Sit on top */
            left: 0;
            top: 0;
            width: 100%;/* Full width */
            height: 100%;/* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0, 0, 0); /* Fallback color */
            background-color: rgba(0, 0, 0, 0.4);/* Black w/ opacity */
        }
        /* PDF Popup */
        .modal-content {
            background-color: #fefefe;
            margin: 0 auto;/* centered */
            padding: 20px;
            border: 1px solid #888;
            width: 80%;/* Could be more or less, depending on screen size */
        }
    </style>
</head>

<!-- JAVASCRIPT | runs on load-->
<script language="Jscript" script type="text/javascript">

    //MAIN FUNCTION: runs on button click and/or timer (default on)
    function loadPage() {

        //Changable variables
        var FolderPath = "./output test";
        var mifis = [
            "Mifi 123-123-123",
            "Mifi 321-123-123",
            "Mifi 543-123-123",
            "Mifi 987-123-123"
        ];


        //keys: mifi, name, issue_date, return_date
        var rJson = JSON.parse(ReadFile("./output test/test.json"));//calls ReadFile to read json file

        var rList = FileList(FolderPath);
        var rf = ParseDelim(FileList(FolderPath));


        var heder = ["Mifi", "Name", "Issue Date", "Return Date", "Status"];
        var cont = [rJson.name, rJson.issue_date, rJson.return_date];

        ClearPage();
        //refreshPage(3600); //Refresh every (seconds)

        window.resizeTo(screen.availWidth, screen.availHeight);
        window.moveTo(0, 0);


        mkTable(heder, mifis, cont);


        //mkTable(hdr,mifis,ct,4);

        //document.getElementById("txt1").innerHTML = rJson[0] + "<br>";
        //document.getElementById("txt2").innerHTML = rf + "<br>";
        //document.getElementById("txt2").innerHTML = d + "<br>";
        // document.getElementById("txt3").innerHTML = rf.sort(compareByColumnIndex) + "<br>";
        //document.getElementById("txt4").innerHTML = rf[9] + "<br>";



    }

    //On call | list folder contents
    function FileList(path) {
        var fso, f, f1, fc, s, t;
        fso = new ActiveXObject("Scripting.FileSystemObject");
        f = fso.GetFolder(path);
        fc = new Enumerator(f.files);
        s = "";
        //var i=0;
        while (!fc.atEnd()) {
            var d = new Date(fc.item().datelastmodified);
            s += (fc.item().name + "\t" + d.toLocaleString());//.datecreated    Thu Feb 21 2019 19:00:58 GMT-0600 (Central Standard Time)
            fc.moveNext();
            if (!fc.atEnd()) { s += "\n"; }
        }
        return s; //use s to test print files
    }

    //On call | read a file given location/name
    function ReadFile(file) {
        var fso, f, fRead;
        fso = new ActiveXObject("Scripting.FileSystemObject");
        f = fso.OpentextFile(file, 1);
        fRead = f.ReadAll();
        fso.close;
        return fRead;
    }

    //On call | parse tab delmited text
    function ParseDelim(content) {
        var aRead, lRead, wRead;
        var words = [], tRow = [];
        aRead = content;// read all text
        lRead = aRead.split("\n");//create array of lines by line break
        for (i = 0; i < lRead.length; i++)//for every line do this
        {
            words = lRead[i].split("\t");//create array of lines by tab char
            tRow = tRow.concat([words]);//array of word arrays
        }
        return tRow; //return multidim array of words/"cells"
    }

    // //On call | convert date format to d/d/d time
    // function cnvDate(d){
	//             var cDate = new Date(d);
	//             var convertedDate = cDate.toLocaleString();
	//             return convertedDate;
	//         }

    //On call | make table (array:header labels | array: mifis | array: json data)
    function mkTable(h, mifi, ct) {
        for (i = 0; i <= mifi.length; i++) {
            //CREATE ROW
            var newDiv = document.createElement("div");
            newDiv.setAttribute("id", "gridRow" + i);
            newDiv.className = "rowStyle";
            document.getElementById("container").appendChild(newDiv);

            //CREATE 6 COLUMNS | C1:mifi number | C2-4:name, issue date | return date | C4:status message | C5:Button
            for (ii = 0; ii < (h.length + 1); ii++) {
                var newDivC = document.createElement("div");
                //newDivC.className="col-1";
                if (i == 0) {
                    if (ii < h.length) {
                        newDivC.className = "col-1 cHeadStyle";
                        var newContent = document.createTextNode(h[ii]);//print header row
                    } else {
                        var newContent = document.createTextNode("");
                    }
                } else if (ii == 0) {
                    newDivC.className = "col-1 cIDStyle";
                    var newContent = document.createTextNode(mifi[i - 1]);//in 1st column print mifi number or MIFI ID
                } else if (ii == 5) {//add button at last column
                    newDivC.className = "col-1 cbtnStyle";
                    newContent = document.createElement("input");
                    newContent.setAttribute("id", "rBtn" + i);
                    newContent.className = "btn-1";
                    newContent.type = "button";
                    newContent.value = "Check Out";
                    newContent.setAttribute("onclick", "CheckInPDF(this.id)");
                }else if(ii==4){
                    newDivC.className = "col-1 cDataStyle";
                    var newContent = document.createTextNode("test");//status message
                }else {
                    newDivC.className = "col-1 cDataStyle";
                    var newContent = document.createTextNode(ct[ii - 1]);//print column items
                }
                //else if(ii==4) display status message

                newDivC.appendChild(newContent);
                document.getElementById("gridRow" + i).appendChild(newDivC);
            }
        }
    }

    //On call | display status mesage
    function statusMsg(dates){
        var msg;
        //if checked out | NOT AVAILABLE
        //if today | DUE
        //if today or greater | PAST DUE
        //if available | AVAILABLE
        //PROGRESS BAR
        return msg;
    }

    //On call | open pdf document popup
    function CheckInPDF(btnID) {
        var btn = document.getElementById(btnID);
        if (btn.value == "Check Out") {

            var pdf = document.createElement("iframe");
            var modal = document.getElementById('myModal');

            pdf.setAttribute("id", "pdfframe");
            pdf.scrolling = "auto";
            pdf.src = "./1297.2 Tablet 2.pdf";
            document.getElementsByClassName("modal-content")[0].appendChild(pdf);
            btn.value = "Check In";

            modal.style.display = "block";

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                    document.getElementsByClassName("modal-content")[0].removeChild(pdf);
                }
            }
        } else {
            btn.value = "Check Out";
        }
    }

    //On call | clear page contents contents
    function ClearPage() {
        document.getElementById("container").innerHTML = "";
    }

    //On call | start timer in seconds
    function refreshPage(t) {
        var rTime = t * 1000;
        var timout = setTimeout('window.location.reload();', rTime);
        return timout;
    }

</script>

<body onload="loadPage()">

    <!-- dynamicaly populated rows and columns -->
    <div id="container"></div>

    <input type="button" id="btnnn" class="col-1 btn-1" value="Show string" onclick="loadPage()" />&ensp;
    <input type="button" class="col-1 btn-1" value="Clear String" onclick="ClearPage()" />&ensp;

    <!-- Popup for PDF viewer -->
    <div id="myModal" class="modal">
        <div class="modal-content">
            <!-- <span class="close">&times;</span> -->
            <!-- <p>Some text in the Modal..</p> -->
        </div>
    </div>

</body>

</html>
